name: Create Module Releases

on:
  push:
    tags:
      - "*-v*" # Match tags that contain a module name followed by "-v"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow write access to repository contents (required for creating releases)
      id-token: write # Allow using GitHub Actions tokens
      pull-requests: write # If you need to interact with pull requests
      issues: write # If you need to interact with issues

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up variables
        id: vars
        run: |
          # Extract the module name from the tag
          TAG_NAME=${GITHUB_REF##*/}
          MODULE_NAME=${TAG_NAME%-*}  # Get everything before the last '-'
          VERSION=${TAG_NAME#*-}       # Get everything after the first '-'
          echo "MODULE_NAME=${MODULE_NAME}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Check if module directory exists
        id: check_module
        run: |
          if [ ! -d "${MODULE_NAME}" ]; then
            echo "Module directory ${MODULE_NAME} does not exist."
            exit 1
          fi
          echo "Module directory ${MODULE_NAME} exists."

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }} # Corrected from 'release_name'
          draft: false
          prerelease: false
          files: |
            ${{ env.MODULE_NAME }}/main.tf
            ${{ env.MODULE_NAME }}/outputs.tf
            ${{ env.MODULE_NAME }}/variables.tf
            # List other files for the specific module, or use a wildcard if applicable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List files in release directory (for debugging)
        run: |
          echo "Files to include in release:"
          ls -R ${{ env.MODULE_NAME }}
